---
format: html
---

## `r fontawesome::fa("chart-simple", fill = "#5A5A5A", a11y = "sem")` Step 3. Create a basic plot

::: panel-tabset

## **`r fontawesome::fa("temperature-quarter", fill = "#5A5A5A", a11y = "sem")` Ex 1:** Ocean Temperatures

Let's start by creating a super basic **ridgeline plot of aggregate bottom temperatures by month** using `geom_density_ridges_gradient()` from the [`{ggridges}` package](https://github.com/wilkelab/ggridges/):

```{r}
#| eval: true
#| echo: true
#| message: false
#..........................load packages.........................
library(tidyverse)
library(ggridges)

#..........................read in data..........................
mko_clean <- readRDS(here::here("clean-data", "mohawk_temps.rds"))

#..............................plot..............................
mko_ridges_plot <- mko_clean |> 
  
  # group by month ----
  group_by(month_name) |> 
  
  # intialize ggplot ----
  ggplot(aes(x = Temp_bot, y = month_name, fill = after_stat(x))) +
  
  # create ridgeline plot ----
  ggridges::geom_density_ridges_gradient() 

mko_ridges_plot
```

## **`r fontawesome::fa("money-bill-1", fill = "#5A5A5A", a11y = "sem")` Ex 2:** Wages

Let's start by creating a super basic **dumbbell plot of male vs. female salaries by occupation** (using the `select_jobs.rds` file, though feel free to explore other occupations using `all_jobs.rds` on your own) -- we'll do this using `geom_segment()` to create the line connecting our points and `geom_point()` to create the points representing male and female salaries:

```{r}
#| eval: true
#| echo: true
#| message: false
#..........................load packages.........................
library(tidyverse)

#..........................import data...........................
# use this dataset if you want to explore all occupations included in the original TidyTuesday dataset
# all_jobs <- readRDS(here::here("clean-data", "all_jobs.rds")) 

# filtered data for plotting (original data contains too many occupations to plot at once)
# includes only 10 occupations from each of the following categories (occupations that are 75%+ women, 45-55% women, and 75%+ men)
select_jobs <- readRDS(here::here("clean-data", "select_jobs.rds")) 

#..............................plot..............................
# initialize ggplot ----
earnings_plot <- ggplot(select_jobs) +
  
  # create dumbbells ----
  geom_segment(aes(x = occupation, xend = occupation, y = total_earnings_female, yend = total_earnings_male)) +
  geom_point(aes(x = occupation, y = total_earnings_male)) +
  geom_point(aes(x = occupation, y = total_earnings_female)) 

earnings_plot
```

## **`r fontawesome::fa("sun-plant-wilt", fill = "#5A5A5A", a11y = "sem")` Ex 3:** CA Drought

Let's start by creating a super basic **stacked area plot of percent area by condition category through time** for California only, using `geom_area()`. Inspired by a number of #tidytuesday submissions (I searched [**#tidytuesday drought**](https://twitter.com/search?q=%23tidytuesday%20drought&src=typed_query) on Twitter; see those by [@sponce1](https://twitter.com/sponce1/status/1537551241638731776), [@KittJonathan](https://twitter.com/KittJonathan/status/1536643331760996352) [@BlakeRobMills](https://twitter.com/BlakeRobMills/status/1536908360896978944), [@leeolney3](https://twitter.com/leeolney3/status/1536586800860385280), [@neilgcurrie](https://twitter.com/neilgcurrie/status/1536740334700441600), [@Topenomics](https://twitter.com/Topenomics/status/1536668942181494784)), I want to display my drought conditions as positive values and wet conditions as negative values. To do so, we'll need to multiply all wet category values by -1:

```{r}
#| eval: true
#| echo: true
#| message: false
#..........................load packages.........................
library(tidyverse)

#..........................read in data..........................
drought_clean <- readRDS(here::here("clean-data", "us_drought.rds"))

#..............................plot..............................
ca_plot <- drought_clean |>
  
  # filter for CA ----
  filter(state_abb == "CA") |> 
  
  # make wet condition values negative by multiplying by -1 ----
  mutate(perc_area = ifelse(test = grepl("D", condition) == T, yes = perc_area, no = perc_area * -1)) |>
  
  # initialize ggplot ----
  ggplot(aes(x = date, y = perc_area, fill = condition_long)) + 
  
  # create stacked area chart ----
  geom_area() 

ca_plot
```

:::