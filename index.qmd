---
title: "One workflow for building effective (and pretty) `{ggplot2}` data visualizations"
author: Sam Csik
date: March 16, 2022
format: 
  html:
    theme: minty
    toc: true
    toc-location: left
---

<br>

:::: {.columns}
::: {.column width="40%"}
![](media/ggplot2_hex.png){fig-align="center"}
:::

::: {.column width="60%"}
`{ggplot2}` has, in many ways, become the de facto tool for data visualization in R. And with the *many* extension packages available, there's hardly a limit to what you can create. Building effective and visually-pleasing data visualizations is a skill that gets easier with practice, and following a somewhat structured workflow -- at least at the start -- can help you get there faster. This workshop covers one approach for doing so, though you'll find what works best for you with time.
:::
::::

Below, you'll find three different examples, beginning with an assessment of the raw data and ending with a completed visualization. Here's a sneak peak of what we'll be creating:

::: panel-tabset

## **`r fontawesome::fa("temperature-quarter", fill = "#5A5A5A", a11y = "sem")` Example 1:** Ocean Temperatures

```{r}
#| eval: true
#| echo: false
#| message: false
#..........................load packages.........................
library(tidyverse)
library(ggridges)

#..........................read in data..........................
mko_clean <- readRDS(here::here("clean-data", "mohawk_temps.rds"))

#.......................calculate avg temp.......................
mko_avg <- mko_clean |>
  summarize(mean_temp = round(mean(Temp_bot, na.rm = TRUE), 1)) |>
  pull()

#..............................plot..............................
mko_ridges_plot <- mko_clean |>
  group_by(month_name) |>

  # create ridgeline plot ----
  ggplot(aes(x = Temp_bot, y = month_name, fill = after_stat(x))) +
  ggridges::geom_density_ridges_gradient(rel_min_height = 0.01, scale = 3) + # rel_min_height cuts trailing tails (0.01 suggested); scale sets extent of overlap

  # add vertical line at avg temp + annotation
  geom_vline(xintercept = mko_avg, linetype = "dashed", color = "black") +
  annotate(geom = "segment", x = 18, y = "April", xend = mko_avg, yend = "May",
           arrow = arrow(length = unit(3, "mm"))) + # this is mostly just a bunch of manual fiddling until the arrow is placed where I want it
  annotate(geom = "text", x = 18, y = "April", label = paste0(" Avg Temp = ", mko_avg, "째C"), hjust = "left") + # same here

  # set x-axis breaks ----
  scale_x_continuous(breaks = c(9, 12, 15, 18, 21)) +

  # arrange months in reverse chronological order ----
  scale_y_discrete(limits = rev(month.name)) +

  # fill color ----
  scale_fill_gradientn(colors = c("#2C5374","#778798", "#ADD8E6", "#EF8080", "#8B3A3A"), name = "Temp. (째C)") +

  # update labs & titles ----
  labs(x = "Bottom Temperature (째C)",
       title = "Bottom Temperatures at Mohawk Reef, Santa Barbara, CA",
       subtitle = "Temperatures (째C) aggregated by month from 2005 - 2022") +

  # apply theme ----
  ggridges::theme_ridges(font_size = 13, grid = TRUE) +

  # adjust theme options ----
  theme(
    axis.title.y = element_blank()
  )

mko_ridges_plot
```

## **`r fontawesome::fa("sun", fill = "#5A5A5A", a11y = "sem")` Example 2:** CA Drought

```{r}
#| eval: true
#| echo: false
#| message: false

#..........................load packages.........................
library(tidyverse)
library(lubridate)
library(geofacet)
library(cowplot)
library(showtext)

#.............add fonts (must be downloaded & saved).............
# font_add("alfa", "AlfaSlabOne-Regular.ttf")
# font_add("sen", "Sen-Regular.ttf")

#..........................read in data..........................
drought_clean <- readRDS(here::here("clean-data", "us_drought.rds"))

#..............................plot..............................

# color palette ----
colors <- c("#4D1212", "#9A2828", "#DE5A2C", "#DE922C", "#DEC02C", 
            "#ABCAFA", "#77A3EA", "#5287DE", "#243CB9", "#152473")
            
# title & subtitle text ----
ca_title = "Drought vs. Wet Conditions Across California"
ca_subtitle = "Percent area experiencing drought versus wet conditions 2012 to 2022"

# plot ----   
ca_plot <- drought_clean |> 
  filter(state_abb == "CA") |> 
  
  ggplot() + 
  
  # create area chart & add horizontal lines ----
  geom_area(aes(x = date, y = value, fill = condition_long)) +
  geom_hline(yintercept = 100, color = "#9B2F2F", linetype = 2) +
  geom_hline(yintercept = 50, color = "#FF9861", linetype = 2) +
  geom_hline(yintercept = -50, color = "#B7D2FF", linetype = 2) +
  geom_hline(yintercept = -100, color = "#2F3F9B", linetype = 2) +
  
  # set x-axis breaks ----
  scale_x_date(date_labels = "'%y", date_breaks = "2 years") +
  
  # set colors ----
  scale_fill_manual(values = colors) +
  
  # labs & titles ----
  labs(y = "% area",
       title = ca_title,
       subtitle = ca_subtitle) +
  
  # set theme ----
  theme_classic() +
  
  # customize theme ----
  theme(
    
    # background colors
    legend.background = element_rect(fill = "#9B9B9B", color = "#9B9B9B"),
    plot.background = element_rect(fill = "#9B9B9B", color = "#9B9B9B"), # 292828
    panel.background = element_rect(fill = "#9B9B9B", color = "#9B9B9B"),
    
    # title & subtitle text
    plot.title = element_text(color = "#303030", size = 16, face = "bold"), # family = "alfa", 
    plot.subtitle = element_text(color = "#303030", size = 13), # family = "sen", 
    
    # legend
    legend.direction = "horizontal",
    legend.position = "bottom",
    legend.title = element_blank(),
    legend.text = element_text(color = "#303030"), # family = "sen", 
    
    # axes
    axis.text.y = element_blank(),
    axis.title = element_blank(),
    axis.line = element_blank(),
    axis.ticks = element_blank()
    
  ) +
  
  # position legend ----
  guides(fill = guide_legend(nrow = 2, byrow = TRUE, reverse = FALSE,
                             label.position = "bottom", keywidth = 3)) 

ca_plot
```


## **Example 3:**
:::

{{< include /sections/1-determine-data-types.qmd >}}

{{< include /sections/2-determine-graph-types.qmd >}}

{{< include /sections/3-create-basic-plot.qmd >}}

{{< include /sections/4-improve-readability.qmd >}}

{{< include /sections/5-final-touches.qmd >}}

<!-- {{< include /sections/how-to-improve.qmd >}} -->
